# Завдання 2

# У вас є текстовий файл, який містить інформацію про котів. 
# Кожен рядок файлу містить унікальний ідентифікатор кота, його ім'я та вік, розділені комою. 
# Наприклад:
# 60b90c1c13067a15887e1ae1,Tayson,3
# 60b90c2413067a15887e1ae2,Vika,1

# Ваше завдання - розробити функцію get_cats_info(path), яка читає цей файл та 
# повертає список словників з інформацією про кожного кота.

# Вимоги до завдання:
# Функція get_cats_info(path) має приймати один аргумент - шлях до текстового файлу (path).
# Файл містить дані про котів, де кожен запис містить унікальний ідентифікатор, ім'я кота та його вік.
# Функція має повертати список словників, де кожен словник містить інформацію про одного кота.

# Рекомендації для виконання:

# Використовуйте with для безпечного читання файлу.
# Пам'ятайте про встановлення кодування при відкриті файлів
# Для кожного рядка в файлі використовуйте split(',') для отримання ідентифікатора, імені та віку кота.
# Утворіть словник з ключами "id", "name", "age" для кожного кота та додайте його до списку, який буде повернуто.
# Опрацьовуйте можливі винятки, пов'язані з читанням файлу.

def get_cats_info(path: str) -> list:
    cats_list = []
    
    try:
        with open(path, 'r', encoding='utf-8') as file:
            for line in file:
                try:
                    id, name, age = line.strip().split(',')
                    cats_list.append({"id": id, "name": name, "age": int(age)})
                except ValueError as ve:
                    print(f"Помилка обробки рядка '{line.strip()}': {ve}")

    except FileNotFoundError:
        print(f"Файл {path} не знайдено.")
    except Exception as e:
        print(f"Сталася помилка: {e}")

    return cats_list

# Приклад використання
cats_info = get_cats_info("task_2/cats_file.txt")
print(cats_info)
